version: '3.8'

services:
  # Frontend - Angular Application
  frontend:
    build: .
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend - Java Application (placeholder)
  backend:
    image: openjdk:17-jdk-alpine
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://db:5432/fsrfp
      - DATABASE_USERNAME=fsrfp_user
      - DATABASE_PASSWORD=fsrfp_password
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped
    # Uncomment and adjust when backend JAR is available
    # volumes:
    #   - ./backend/target/fsrfp-backend.jar:/app/app.jar
    # command: ["java", "-jar", "/app/app.jar"]

  # Database - PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fsrfp
      - POSTGRES_USER=fsrfp_user
      - POSTGRES_PASSWORD=fsrfp_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  # Redis - For caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
