// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { ProcessDTO } from '@app/model/bw/co/roguesystems/fsrfp/process/process-dto';
import { DocumentTypeDTO } from '@app/model/bw/co/roguesystems/fsrfp/document/type/document-type-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';

@Injectable({
  providedIn: 'root',
})
export class ProcessApi {
  protected path = '/process';

  private http = inject(HttpClient);

  public findById(id: string | any): Observable<ProcessDTO | any> {
    return this.http.get<ProcessDTO | any>(`${this.path}/${id}`);
  }

  public findByRegulator(regulatorId: string | any): Observable<ProcessDTO[] | any[]> {
    return this.http.get<ProcessDTO[] | any[]>(`${this.path}/regulator/{regulatorId}/regulatorId/${regulatorId}`);
  }

  public getAll(): Observable<DocumentTypeDTO[] | any[]> {
    return this.http.get<DocumentTypeDTO[] | any[]>(`${this.path}`);
  }

  public getAllPaged(pageNumber: number | any, pageSize: number | any): Observable<Page<ProcessDTO> | any> {
    return this.http.get<Page<ProcessDTO> | any>(`${this.path}/paged?pageNumber=${pageNumber}&pageSize=${pageSize}`);
  }

  public remove(id: string | any): Observable<boolean | any> {
    return this.http.delete<boolean | any>(`${this.path}/${id}`);
  }

  public save(process: ProcessDTO | any): Observable<ProcessDTO | any> {
    return this.http.post<ProcessDTO | any>(`${this.path}`, process);
  }

  public search(criteria: string | any): Observable<DocumentTypeDTO[] | any[]> {
    return this.http.get<DocumentTypeDTO[] | any[]>(`${this.path}/search?criteria=${criteria}`);
  }
}
